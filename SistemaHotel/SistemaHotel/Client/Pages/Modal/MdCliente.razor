@inject IClienteServicio _clienteServicio
@inject ISnackbar _snackBar

<MudDialog Style="width:400px">

    <DialogContent>
        <MudContainer Style="max-height: 400px; overflow-y: scroll" Class="m-0 p-0">

            <EditForm Model="@_cliente">

                <MudTextField @bind-Value="@_cliente.TipoDocumento" Class="mb-3"
                              Label="Tipo Documento" Variant="Variant.Outlined" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Badge"
                              For="@(() => _cliente.TipoDocumento)" />

                <MudTextField @bind-Value="@_cliente.Documento" Class="mb-3"
                              Label="Documento" Variant="Variant.Outlined" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Badge"
                              For="@(() => _cliente.Documento)" />

                <MudTextField @bind-Value="@_cliente.NombreCompleto" Class="mb-3"
                              Label="Nombre Completo" Variant="Variant.Outlined" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Badge"
                              For="@(() => _cliente.NombreCompleto)" />

                <MudTextField @bind-Value="@_cliente.Correo" Class="mb-3"
                              Label="Correo" Variant="Variant.Outlined" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Badge"
                              For="@(() => _cliente.Correo)" />

            </EditForm>

        </MudContainer>

    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Filled" Color="Color.Default" OnClick="Cancel">Cancelar</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="Guardar">Guardar</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [Parameter]
    public ClienteDTO _cliente { get; set; } = new ClienteDTO();


    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }

    protected override async Task OnInitializedAsync()
    {

    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }
    private async Task Guardar()
    {
        if (string.IsNullOrWhiteSpace(_cliente.TipoDocumento) || string.IsNullOrWhiteSpace(_cliente.Documento) || 
        string.IsNullOrWhiteSpace(_cliente.NombreCompleto) || string.IsNullOrWhiteSpace(_cliente.Correo)
        )
            return;

        string _mensaje = "";
        bool _resultado;

        if (_cliente.IdCliente != 0)
        {
            _resultado = await _clienteServicio.Editar(_cliente);
            _mensaje = "Cliente fue modificado";
        }
        else
        {
            var response = await _clienteServicio.Crear(_cliente);
            _resultado = response.status;
            _mensaje = "Cliente fue creado";
        }

        if (_resultado)
        {
            _snackBar.Add(_mensaje, Severity.Success, a => a.VisibleStateDuration = 1000);
            MudDialog.Close(DialogResult.Ok(true));
        }
        else
            _snackBar.Add("Error al guardar cambios", Severity.Error, a => a.VisibleStateDuration = 1000);

    }
}
